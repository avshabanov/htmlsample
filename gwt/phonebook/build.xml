<?xml version="1.0"?>
<project name="phonebook" basedir="." default="war">
  <!-- Project-specific variables -->
  <property name="app.startupModule" value="phonebook.PhonebookApp" />
  <property name="app.startupUrl" value="PhonebookApp.html" />
  <property name="app.warName" value="phonebook-webapp.war" />

  <!-- Arguments to gwtc and devmode targets -->
  <property name="gwt.args" value="" />

  <!-- Catch environment variables to the env name -->
  <property environment="env"/>

  <!-- Configure SDK paths -->
  <property name="gwt.sdk" location="${env.HOME}/opt/sdk/gwt-2.5.1" />
  <property name="m2.repo" value="${env.HOME}/.m2/repository" />

  <property name="test.classes" value="target/test/classes" />
  <property name="test.report" value="target/test/report" />

  <target name="prepare"/>

  <target name="clean" description="Cleans this project">
    <delete dir="target" failonerror="false" />
  </target>

  <path id="project.class.path">
    <pathelement location="target/war/WEB-INF/classes"/>
    <pathelement location="${gwt.sdk}/gwt-user.jar"/>
    <!--<fileset dir="${gwt.sdk}" includes="gwt-dev*.jar"/>-->
    <!-- Add any additional non-server libs (such as spring) -->
    <fileset dir="target/war/WEB-INF/lib" includes="**/*.jar"/>
  </path>

  <path id="project.test.class.path">
    <pathelement location="${m2.repo}/junit/junit/4.8.2/junit-4.8.2.jar"/>
    <pathelement location="${test.classes}"/>
  </path>

  <target name="libs" description="Copy libs to WEB-INF/lib">
    <mkdir dir="target/war/WEB-INF/lib" />
    <copy todir="target/war/WEB-INF/lib" file="${gwt.sdk}/gwt-servlet.jar" />
    <copy todir="target/war/WEB-INF/lib" file="${gwt.sdk}/gwt-servlet-deps.jar" />
    <!-- Add any additional server libs that need to be copied -->
  </target>

  <target name="javac" depends="libs" description="Compile java source to bytecode">
    <mkdir dir="target/war/WEB-INF/classes"/>
    <javac srcdir="src" includes="**" encoding="UTF-8"
           destdir="target/war/WEB-INF/classes"
           source="1.7" target="1.7" nowarn="true"
           debug="true" debuglevel="lines,vars,source" includeantruntime="false">
      <classpath refid="project.class.path"/>
    </javac>
    <copy todir="target/war/WEB-INF/classes">
      <fileset dir="src" excludes="**/*.java"/>
    </copy>
  </target>

  <target name="gwtc" depends="javac" description="GWT compile to JavaScript (production mode)">
    <java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler">
      <classpath>
        <pathelement location="src"/>
        <path refid="project.class.path"/>
        <fileset dir="${gwt.sdk}" includes="gwt-dev*.jar"/>
        <pathelement location="${gwt.sdk}/validation-api-1.0.0.GA.jar" />
        <pathelement location="${gwt.sdk}/validation-api-1.0.0.GA-sources.jar" />
      </classpath>
      <jvmarg value="-Xss16M"/>
      <jvmarg value="-Xmx256M"/>
      <arg line="-war"/>
      <arg value="target/war"/>
      <!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
      <arg line="${gwt.args}"/>
      <arg value="${app.startupModule}"/>
    </java>
  </target>

  <target name="build" depends="gwtc" description="Build this project">
    <copy todir="target/war/">
      <fileset dir="webapp"/>
    </copy>
  </target>

  <target name="war" depends="build" description="Create a war file">
    <zip destfile="target/${app.warName}" basedir="target/war"/>
  </target>


  <target name="set-devmode-dbg-jvmarg">
    <property name="devmode.jvmarg" value="-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005 -Xmx256m" />
  </target>

  <target name="set-devmode-rel-jvmarg">
    <property name="devmode.jvmarg" value="-Xmx256m" />
  </target>

  <target name="run-devmode">
    <fail unless="devmode.jvmarg" message="devmode.jvmarg is not set, use devmode or devmode-dbg targets"/>
    <java failonerror="true" fork="true" classname="com.google.gwt.dev.DevMode">
      <classpath>
        <pathelement location="src"/>
        <fileset dir="${gwt.sdk}" includes="gwt-dev*.jar"/>
        <path refid="project.class.path"/>
        <pathelement location="${gwt.args}/validation-api-1.0.0.GA.jar" />
        <pathelement location="${gwt.args}/validation-api-1.0.0.GA-sources.jar" />
      </classpath>
      <jvmarg value="${devmode.jvmarg}" />
      <arg value="-startupUrl"/>
      <arg value="${app.startupUrl}"/>
      <arg line="-war"/>
      <arg value="target/war"/>
      <arg line="${gwt.args}"/>
      <arg value="${app.startupModule}"/>
    </java>
  </target>

  <target name="devmode" depends="javac, set-devmode-rel-jvmarg, run-devmode" description="Run development mode"/>
  <target name="devmode-dbg" depends="javac, set-devmode-dbg-jvmarg, run-devmode" description="Run development mode"/>

  <target name="testCompile" depends="javac">
    <mkdir dir="${test.classes}" />
    <mkdir dir="${test.report}" />
    <javac srcdir="test" includes="**" encoding="UTF-8"
           destdir="${test.classes}"
           source="1.7" target="1.7" nowarn="true"
           debug="true" debuglevel="lines,vars,source" includeantruntime="false">
      <classpath refid="project.test.class.path"/>
    </javac>
  </target>

  <target name="test" depends="javac, testCompile">
    <junit printsummary="yes" haltonfailure="yes" showoutput="yes">
      <formatter type="xml"/>
      <formatter type="plain" usefile="false" />
      <classpath refid="project.test.class.path"/>
      <batchtest fork="yes" todir="${test.report}">
        <fileset dir="test">
          <include name="**/*Test*.java"/>
        </fileset>
      </batchtest>
    </junit>
  </target>
</project>
